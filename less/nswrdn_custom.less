/*!
 * Put customizations of the bootstrap-layout here.
 * Use the nswrdn_variables.less to adapt bootstrap-variables.
 * Please follow this HTML/CSS style-guide:
 * https://github.com/mdo/code-guide
 */


/******************
 * NAVIGATION
 *****************/
// Navbar-dropdowns: brown and hide white arrow
.navbar .dropdown-menu {
  background-color: #E0D2A8;
}
.navbar .nav > li > .dropdown-menu::before {
  visibility:hidden;
}
.navbar .nav > li > .dropdown-menu::after {
  visibility:hidden;
}

// For user login link which doesnt get touched by the normal navbar selectors.
.navbar-default a {
  color: @navbar-default-link-color;
  &:hover {
    color: @navbar-default-link-hover-color;
  }
}


// Navbar-inverse (subnav) colors/dropdown
.navbar-inverse li a,  {
  color: white;
}
.navbar-inverse .dropdown-menu {
  background-color: @rdn-dark-green;
}
.navbar-inverse .dropdown-menu li a:hover{
  text-decoration:none;
  color: white;
  background-color: @rdn-menu-light;
}
// Subnav positioning
.subnav {
  z-index: 1020;
  width: 100%;
}
.subnav .nav {
  margin-top: 5px;
}

// shrink nav pills and enlarge navbar
.nav-pills > li > a
{
  padding-top: 2px;
  padding-bottom: 2px;
}

.subnav .container
{
  min-height: @navbar-height;
}
// Navbar should only be fixed large screens (save space on small displays)
@media (min-width: 980px) {
  .subnav-fixed {
    top: @navbar-height + 1;
    position:fixed;
  }
}

.navbar .logo {
  float: left;
  padding-right: 3px;
}

ul.nav-tabs li a:hover, ul.nav-pills li a:hover{
  text-decoration:none;
}

.content ul.nav-pills li a{
border: 1px solid transparent;
}

.content ul.nav-pills li a:hover{
  border-color:@gray-lighter;
}

ul.nav-tabs li.active a, ul.nav-tabs li.active a:hover, ul.nav-tabs li.active a:focus{
  background-color:@gray-lighter;
}

ul.pagination li a:hover{
  text-decoration:none;
}

ul.pagination .active a, ul.pagination .active a:hover, ul.pagination .active a:focus{
  background-color: @rdn-dark-green;
  border-color: @rdn-dark-green;
}

a[data-toggle=collapse]{
  color:@gray!important;
}

a[data-toggle=collapse]:hover, a[data-toggle=collapse]:focus{
  color:@gray-light!important;
}

a[data-toggle=collapse], a[data-toggle=collapse]:hover, a[data-toggle=collapse]:focus{
  text-decoration:none!important;
}
/******************
 * GENERAL
 *****************/
html, body{
  height:100%;
}
body{
  padding-bottom: 61px;
}
div.outer{
  min-height:100%;
  padding-top: @navbar-height+1;
  /* DONT use padding-bottom here -AJ */
}
div.content a, div.base_footer a{
  color:@rdn-dark-green;
}
div.content a:hover{
  color:@rdn-dark-green-hover-color;
  text-decoration: underline;
}

.dropdown-menu a, .nav a, .navbar a, .pager a, .btn, .accordion-heading a {
  text-decoration: none;
}

.base_footer {
  /* sticky footer at bottom of page */
  text-align: center;
  position: relative;
  width: 100%;
  left:0px;
  bottom:0px;
  border-top: 1px solid #e5e5e5;
  background-color: #f5f5f5;
  display:block;
  padding: 20px 0;
}

.asterisk {
   font-weight: bold; 
   color: #db424e; 
}

.help-icon{
  cursor: pointer;  
}
/* do this to inherit styles, otherwise it will look weird on page load even if 
 * we use jquery to addClass*/
input, select, textarea{
  .form-control
}

input[type='checkbox']{
  height:auto!important;
  width:auto!important;
  
}

.alert{
  margin-top:10px;
}

tr.clickable-row{
  cursor: pointer;
}
.nowrap{
  white-space:nowrap;
}
.close_tab{
  right:8px;
  top:10px;
  position:absolute;
}

/* These are good to add to icons to give more clarity e.g. <i class="icon-ok-sign green-icon"></i> */
.blue-icon{
  color:@brand-primary;
}
.green-icon{
  color:@brand-success;
}
.red-icon{
  color:@brand-danger;
}
.orange-icon{
  color:@brand-warning;
}
.large-icon{
  font-size:20px;
}

/* Styles for the ng-grid:
   although a lot of these are normal css, there are some less related ones down
   the bottom, so i thought it would be best to keep them together. -AJ
 */
.gridStyle { 
    height: 700px!important;
}
.ngPagerContainer{
    display:inline-block;
}
.ngPagerControl{
    display:inline;
}
.ngRowCountPicker select, 
.ngPagerControl input, 
.ngPagerButton, 
.ngRowCountPicker span,
.ngTotalSelectContainer div{
    height:34px!important;
    display:inline;
}
.ngRowCountPicker span{
    margin-top:0px!important;
    margin-right:5px;
    line-height:34px;
}
.ngTotalSelectContainer {
    margin-top:10px!important;
}
.ngFooterTotalItems span{
    line-height:34px;
}
.ngRow.selected{
    /* DIFF COLOUR? */
}

    /* want them to be smaller than the container div */
.ngTopPanel, 
.ngGroupPanel,  
.ngViewport,
.ngCanvas,
.ngHeaderContainer,
.ngRow,
.ngCustomRow,
.ngFooterPanel,
.gridStyle{  
  @media (min-width: @screen-sm-min){
      width: @ng-grid-sm!important;
  }
  @media (min-width: @screen-md-min){
      width: @ng-grid-md!important;
  }
  @media (min-width: @screen-lg-min){
      width: @ng-grid-lg!important;
  }
}

.ngViewport{
  overflow-x: hidden!important;
}

.ngRow{
  border:none!important;
}

.ngCustomRow{
  background-color: inherit!important;
}

.ngCell input,
.ngCell select{
  border: 0px;
  border-radius: 0px;
}

.ngRowDirty{
  background-color: lighten(@brand-warning, 25%)!important;
}

/* background color animation */
.ngRowSaved{
  background-color: lighten(@brand-success, 25%)!important;
}

.ngRowSaved-add,.ngRowSaved-remove {
  background-color: inherit!important;
  transition: all 1500ms;
  -webkit-transition: all 1500ms ease-in-out;
}
.ngRowSaved-add-active {
  background-color: lighten(@brand-success, 25%)!important;
}
.ngRowSaved-remove {
  background-color: lighten(@brand-success, 25%)!important;
}
.ngRowSaved-remove-active {
  background-color: inherit!important;
}
  /*errors*/
.ngRowError{
  background-color: lighten(@brand-danger, 25%)!important;
}

.ngRowError-add{/*.ngRowError-remove {*/
  background-color: inherit!important;
  transition: all 1500ms;
  -webkit-transition: all 1500ms ease-in-out;
}
.ngRowError-add-active {
  background-color: lighten(@brand-danger, 25%)!important;
}
.ngRowError-remove {
  background-color: lighten(@brand-danger, 25%)!important;
  transition: all 400ms;
  -webkit-transition: all 400ms ease-in-out;
}
.ngRowError-remove-active {
  background-color: inherit!important;
}

/* end bg color animation */


.close_button_col{
  background-color: #fdfdfd!important;
}

/* dont need this right now (or ever)
.ngViewport{
  overflow-x:visible!important;
}
.gridStyle{
  overflow-x:visible
}

.grid_row_controls{
  @media (min-width: @screen-sm-min){
      left: @ng-grid-sm!important;
  }
  @media (min-width: @screen-md-min){
      left: @ng-grid-md!important;
  }
  @media (min-width: @screen-lg-min){
      left: @ng-grid-lg!important;
  }
    width:150px;
    height:34px;
    position:absolute;
}*/

/* end ng-grid styles */